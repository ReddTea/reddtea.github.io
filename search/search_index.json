{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About Me","text":"<p>I'm an exoplanet researcher focused on detecting and characterising long-period giant planets by combining precision radial-velocities with astrometry. I develop Bayesian methods and open-source tools to make model selection and evidence estimation more reliable in challenging multi-modal posteriors.</p>"},{"location":"#highlights","title":"Highlights","text":"<p>I built <code>reddemcee</code>, an adaptive parallel-tempering MCMC sampler in Python with original implementations of temperature ladders, and next-gen Bayesian evidence estimation (including a novel hybrid method which combines the best of thermodynamical integration and the stepping-stones algorithm); and <code>EMPEROR</code>, a Python library for joint RV+astrometry orbit fitting (multi-instrument offsets and jitters, GP noise models, stellar activity indices, etc). On the observational side, I've led and analysed programs on CORALIE and worked with HARPS data, extending the CHEPS sample to uncover Jupiter analogues (using combined RV and Hipparcos/Gaia data). </p>"},{"location":"#methods","title":"Methods","text":"<p>Computationally, I specialise in APT MCMC, evidence-driven model comparison, and stellar activity noise modelling. </p> <p>Data-wise, my expertise lays in high-precision radial velocities and astrometry data.</p>"},{"location":"#now-seeking","title":"Now seeking","text":"<p>Currently looking for postdoctoral positions where I can combine algorithm development with bulk data analysis (in preparation Gaia DR4/Roman/PLATO), to tackle down on important exoplanet population questions, like how common true Jupiter analogues are, to answer exoplanet formation questions, like how outer giants help shaping the inner architecture of stellar systems.</p>"},{"location":"#relevant-links","title":"Relevant Links","text":"Pip installable librariesDocumentationPublications <ul> <li>GitHub</li> <li><code>reddemcee</code></li> <li><code>EMPEROR</code></li> <li>Astronomy Utilities</li> <li>kepler solver in C</li> </ul> <ul> <li><code>reddemcee</code></li> <li><code>EMPEROR</code></li> </ul> <ul> <li><code>ORCID</code></li> <li><code>ADS</code></li> </ul>"},{"location":"content-tabs/","title":"Content tabs","text":""},{"location":"content-tabs/#content-tabs","title":"Content Tabs","text":""},{"location":"content-tabs/#generic","title":"Generic","text":"Plain TextUnordered ListOrdered List <p>plain text</p> <ul> <li>first</li> <li>second</li> <li>third</li> </ul> <ol> <li>first</li> <li>second</li> <li>third</li> </ol>"},{"location":"emperor/","title":"EMPEROR","text":"<p><code>EMPEROR</code> (Exoplanet Mcmc Parallel tEmpering for Rv Orbit Retrieval), is an open-source Python-based framework designed for the efficient detection and characterisation of exoplanets by using radial velocity (RV) methods and astrometry.</p> <p>Its combination of performance, flexibility, and ease of use makes it a robust tool for any exoplanet detection endeavour. <code>EMPEROR</code> integrates Dynamic Nested Sampling (DNS) and Adaptive Parallel Tempering (APT) Markov Chain Monte Carlo (MCMC), supporting multiple noise models such as Gaussian Processes (GPs) and Moving Averages (MA). The framework facilitates systematic model comparison using statistical metrics, including Bayesian evidence and Bayes Information Criterion (BIC), while providing automated, publish-ready visualisations.</p> <p>The code is easy to install and easy to use, providing full publication-ready plots and copy-pastable latex tables:</p> <pre><code>import astroemperor as emp\nimport numpy as np\nnp.random.seed(1234)\n\nsim = emp.Simulation()\nsim.load_data('51Peg')  # folder read from /datafiles/\n\nsim.engine_config['setup'] = [10, 500, 3000, 1]  # ntemps, nwalkers, nsweeps, nsteps\n\nsim.add_condition(['Period 1', 'limits', [3, 5]])  # short chain\n</code></pre> <p>Some Automatic Plots:</p> Best FitArviz: Trace and MorePosteriorsEstimatesTemperature Ladder <p>Full model, and phase-folded per planet </p> <p>For every model block:</p> CornerTraceHDI IntervalsNormalised Posteriors <p></p> <p></p> <p></p> <p></p> <p>For every model block, and temperature:</p> ScatterHigher temperatures!Different styles 1Different styles 1 <p></p> <p></p> <p></p> <p></p> <p>For every parameter:</p> GMEHistograms <p></p> <p></p> Swap AcceptanceLadderDensity <p></p> <p></p> <p></p>"},{"location":"reddemcee/","title":"<code>reddemcee</code>","text":"<p><code>reddemcee</code> - Next-generation ladder adaptation and evidence estimators for Adaptive Parallel Tempering.</p> <p>Markov Chain Monte Carlo (MCMC) excels at sampling complex posteriors but traditionally lags behind nested sampling in accurate evidence estimation, which is crucial for model comparison in astrophysical problems.</p> <p>Here I introduce <code>reddemcee</code>, an Adaptive Parallel Tempering Ensemble Sampler, aiming to close this gap by simultaneously presenting next-generation automated temperature-ladder adaptation techniques and robust, low-bias evidence estimators.</p> <p><code>reddemcee</code> couples an affine-invariant stretch move with five interchangeable ladder-adaptation objectives--Uniform Swap Acceptance Rate, Swap Mean Distance, Gaussian-Area Overlap, Small Gaussian Gap, and Equalised Thermodynamic Length--implemented through a common differential update rule. Three evidence estimators are provided: Curvature-aware Thermodynamic Integration (TI+), Geometric-Bridge Stepping Stones (SS+), and a novel Hybrid algorithm that blends both approaches (H+).</p>"}]}